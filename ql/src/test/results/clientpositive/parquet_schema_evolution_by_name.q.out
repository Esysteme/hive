PREHOOK: query: DROP TABLE parquet_schema_evolution_by_name
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE parquet_schema_evolution_by_name
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE parquet_schema_evolution_by_name_struct
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE parquet_schema_evolution_by_name_struct
POSTHOOK: type: DROPTABLE
PREHOOK: query: -- Table to test schema evolution at base level
CREATE TABLE parquet_schema_evolution_by_name (col0 int, col1 double)
PARTITIONED BY (pname string)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@parquet_schema_evolution_by_name
POSTHOOK: query: -- Table to test schema evolution at base level
CREATE TABLE parquet_schema_evolution_by_name (col0 int, col1 double)
PARTITIONED BY (pname string)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@parquet_schema_evolution_by_name
PREHOOK: query: -- Insert a first row with the original schema
INSERT INTO TABLE parquet_schema_evolution_by_name PARTITION (pname='1')
  SELECT 1, 1.0
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name@pname=1
POSTHOOK: query: -- Insert a first row with the original schema
INSERT INTO TABLE parquet_schema_evolution_by_name PARTITION (pname='1')
  SELECT 1, 1.0
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name@pname=1
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=1).col0 SIMPLE []
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=1).col1 SIMPLE []
PREHOOK: query: -- Reorder the columns within the schema
ALTER TABLE parquet_schema_evolution_by_name replace columns (col1 double, col0 int)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@parquet_schema_evolution_by_name
PREHOOK: Output: default@parquet_schema_evolution_by_name
POSTHOOK: query: -- Reorder the columns within the schema
ALTER TABLE parquet_schema_evolution_by_name replace columns (col1 double, col0 int)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@parquet_schema_evolution_by_name
POSTHOOK: Output: default@parquet_schema_evolution_by_name
PREHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name PARTITION (pname='2')
  SELECT 2.0, 2
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name@pname=2
POSTHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name PARTITION (pname='2')
  SELECT 2.0, 2
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name@pname=2
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=2).col0 SIMPLE []
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=2).col1 SIMPLE []
PREHOOK: query: SELECT * FROM parquet_schema_evolution_by_name
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_schema_evolution_by_name
PREHOOK: Input: default@parquet_schema_evolution_by_name@pname=1
PREHOOK: Input: default@parquet_schema_evolution_by_name@pname=2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM parquet_schema_evolution_by_name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_schema_evolution_by_name
POSTHOOK: Input: default@parquet_schema_evolution_by_name@pname=1
POSTHOOK: Input: default@parquet_schema_evolution_by_name@pname=2
#### A masked pattern was here ####
1.0	1	1
2.0	2	2
PREHOOK: query: -- Add a new field in the middle of the schema
ALTER TABLE parquet_schema_evolution_by_name replace columns (col2 string, col1 double, col0 int)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@parquet_schema_evolution_by_name
PREHOOK: Output: default@parquet_schema_evolution_by_name
POSTHOOK: query: -- Add a new field in the middle of the schema
ALTER TABLE parquet_schema_evolution_by_name replace columns (col2 string, col1 double, col0 int)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@parquet_schema_evolution_by_name
POSTHOOK: Output: default@parquet_schema_evolution_by_name
PREHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name PARTITION (pname='3')
  SELECT 'three', 3.0, 3
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name@pname=3
POSTHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name PARTITION (pname='3')
  SELECT 'three', 3.0, 3
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name@pname=3
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=3).col0 SIMPLE []
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=3).col1 SIMPLE []
POSTHOOK: Lineage: parquet_schema_evolution_by_name PARTITION(pname=3).col2 SIMPLE []
PREHOOK: query: SELECT * FROM parquet_schema_evolution_by_name
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_schema_evolution_by_name
PREHOOK: Input: default@parquet_schema_evolution_by_name@pname=1
PREHOOK: Input: default@parquet_schema_evolution_by_name@pname=2
PREHOOK: Input: default@parquet_schema_evolution_by_name@pname=3
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM parquet_schema_evolution_by_name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_schema_evolution_by_name
POSTHOOK: Input: default@parquet_schema_evolution_by_name@pname=1
POSTHOOK: Input: default@parquet_schema_evolution_by_name@pname=2
POSTHOOK: Input: default@parquet_schema_evolution_by_name@pname=3
#### A masked pattern was here ####
NULL	1.0	1	1
NULL	2.0	2	2
three	3.0	3	3
PREHOOK: query: -- Table to test schema evolution at struct level
CREATE TABLE parquet_schema_evolution_by_name_struct (f struct<col0:int,col1:double>)
PARTITIONED BY (pname string)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct
POSTHOOK: query: -- Table to test schema evolution at struct level
CREATE TABLE parquet_schema_evolution_by_name_struct (f struct<col0:int,col1:double>)
PARTITIONED BY (pname string)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct
PREHOOK: query: -- Insert a first row with the original schema
INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='1')
  SELECT named_struct('col0', 1, 'col1', 1.0)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=1
POSTHOOK: query: -- Insert a first row with the original schema
INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='1')
  SELECT named_struct('col0', 1, 'col1', 1.0)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=1
POSTHOOK: Lineage: parquet_schema_evolution_by_name_struct PARTITION(pname=1).f EXPRESSION []
PREHOOK: query: -- Reorder the columns within the schema
ALTER TABLE parquet_schema_evolution_by_name_struct change column f f struct<col1:double,col0:int>
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct
POSTHOOK: query: -- Reorder the columns within the schema
ALTER TABLE parquet_schema_evolution_by_name_struct change column f f struct<col1:double,col0:int>
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct
PREHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='2')
  SELECT named_struct('col1', 2.0, 'col0', 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=2
POSTHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='2')
  SELECT named_struct('col1', 2.0, 'col0', 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=2
POSTHOOK: Lineage: parquet_schema_evolution_by_name_struct PARTITION(pname=2).f EXPRESSION []
PREHOOK: query: SELECT * FROM parquet_schema_evolution_by_name_struct
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=1
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM parquet_schema_evolution_by_name_struct
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=1
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=2
#### A masked pattern was here ####
{"col1":1.0,"col0":1}	1
{"col1":2.0,"col0":2}	2
PREHOOK: query: -- Add a new field in the middle of the schema
ALTER TABLE parquet_schema_evolution_by_name_struct change column f f struct<col2:string,col1:double,col0:int>
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct
POSTHOOK: query: -- Add a new field in the middle of the schema
ALTER TABLE parquet_schema_evolution_by_name_struct change column f f struct<col2:string,col1:double,col0:int>
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct
PREHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='3')
  SELECT named_struct('col2', 'three', 'col1', 3.0, 'col0', 3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=3
POSTHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='3')
  SELECT named_struct('col2', 'three', 'col1', 3.0, 'col0', 3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=3
POSTHOOK: Lineage: parquet_schema_evolution_by_name_struct PARTITION(pname=3).f EXPRESSION []
PREHOOK: query: SELECT * FROM parquet_schema_evolution_by_name_struct
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=1
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=2
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=3
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM parquet_schema_evolution_by_name_struct
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=1
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=2
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=3
#### A masked pattern was here ####
{"col2":null,"col1":1.0,"col0":1}	1
{"col2":null,"col1":2.0,"col0":2}	2
{"col2":"three","col1":3.0,"col0":3}	3
PREHOOK: query: -- Remove a field from the middle of the schema
ALTER TABLE parquet_schema_evolution_by_name_struct change column f f struct<col2:string,col0:int>
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct
POSTHOOK: query: -- Remove a field from the middle of the schema
ALTER TABLE parquet_schema_evolution_by_name_struct change column f f struct<col2:string,col0:int>
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct
PREHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='4')
  SELECT named_struct('col2', 'four', 'col0', 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=4
POSTHOOK: query: INSERT INTO TABLE parquet_schema_evolution_by_name_struct PARTITION (pname='4')
  SELECT named_struct('col2', 'four', 'col0', 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct@pname=4
POSTHOOK: Lineage: parquet_schema_evolution_by_name_struct PARTITION(pname=4).f EXPRESSION []
PREHOOK: query: SELECT * FROM parquet_schema_evolution_by_name_struct
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=1
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=2
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=3
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=4
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM parquet_schema_evolution_by_name_struct
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=1
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=2
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=3
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct@pname=4
#### A masked pattern was here ####
{"col2":null,"col0":1}	1
{"col2":null,"col0":2}	2
{"col2":"three","col0":3}	3
{"col2":"four","col0":4}	4
PREHOOK: query: -- Clean up
DROP TABLE parquet_schema_evolution_by_name
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@parquet_schema_evolution_by_name
PREHOOK: Output: default@parquet_schema_evolution_by_name
POSTHOOK: query: -- Clean up
DROP TABLE parquet_schema_evolution_by_name
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@parquet_schema_evolution_by_name
POSTHOOK: Output: default@parquet_schema_evolution_by_name
PREHOOK: query: DROP TABLE parquet_schema_evolution_by_name_struct
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@parquet_schema_evolution_by_name_struct
PREHOOK: Output: default@parquet_schema_evolution_by_name_struct
POSTHOOK: query: DROP TABLE parquet_schema_evolution_by_name_struct
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@parquet_schema_evolution_by_name_struct
POSTHOOK: Output: default@parquet_schema_evolution_by_name_struct
